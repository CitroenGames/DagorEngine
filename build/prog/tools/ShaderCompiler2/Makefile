# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.22

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/ubuntu/repos/DagorEngine

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/ubuntu/repos/DagorEngine/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	cd /home/ubuntu/repos/DagorEngine/build && $(CMAKE_COMMAND) -E cmake_progress_start /home/ubuntu/repos/DagorEngine/build/CMakeFiles /home/ubuntu/repos/DagorEngine/build/prog/tools/ShaderCompiler2//CMakeFiles/progress.marks
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 prog/tools/ShaderCompiler2/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/ubuntu/repos/DagorEngine/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 prog/tools/ShaderCompiler2/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 prog/tools/ShaderCompiler2/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 prog/tools/ShaderCompiler2/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/ubuntu/repos/DagorEngine/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
prog/tools/ShaderCompiler2/CMakeFiles/parser_gen.dir/rule:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 prog/tools/ShaderCompiler2/CMakeFiles/parser_gen.dir/rule
.PHONY : prog/tools/ShaderCompiler2/CMakeFiles/parser_gen.dir/rule

# Convenience name for target.
parser_gen: prog/tools/ShaderCompiler2/CMakeFiles/parser_gen.dir/rule
.PHONY : parser_gen

# fast build rule for target.
parser_gen/fast:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/parser_gen.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/parser_gen.dir/build
.PHONY : parser_gen/fast

# Convenience name for target.
prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/rule:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/rule
.PHONY : prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/rule

# Convenience name for target.
ShaderCompiler2: prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/rule
.PHONY : ShaderCompiler2

# fast build rule for target.
ShaderCompiler2/fast:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build
.PHONY : ShaderCompiler2/fast

assemblyShader.o: assemblyShader.cpp.o
.PHONY : assemblyShader.o

# target to build an object file
assemblyShader.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/assemblyShader.cpp.o
.PHONY : assemblyShader.cpp.o

assemblyShader.i: assemblyShader.cpp.i
.PHONY : assemblyShader.i

# target to preprocess a source file
assemblyShader.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/assemblyShader.cpp.i
.PHONY : assemblyShader.cpp.i

assemblyShader.s: assemblyShader.cpp.s
.PHONY : assemblyShader.s

# target to generate assembly for a file
assemblyShader.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/assemblyShader.cpp.s
.PHONY : assemblyShader.cpp.s

binDumpUtils.o: binDumpUtils.cpp.o
.PHONY : binDumpUtils.o

# target to build an object file
binDumpUtils.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/binDumpUtils.cpp.o
.PHONY : binDumpUtils.cpp.o

binDumpUtils.i: binDumpUtils.cpp.i
.PHONY : binDumpUtils.i

# target to preprocess a source file
binDumpUtils.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/binDumpUtils.cpp.i
.PHONY : binDumpUtils.cpp.i

binDumpUtils.s: binDumpUtils.cpp.s
.PHONY : binDumpUtils.s

# target to generate assembly for a file
binDumpUtils.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/binDumpUtils.cpp.s
.PHONY : binDumpUtils.cpp.s

boolVar.o: boolVar.cpp.o
.PHONY : boolVar.o

# target to build an object file
boolVar.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/boolVar.cpp.o
.PHONY : boolVar.cpp.o

boolVar.i: boolVar.cpp.i
.PHONY : boolVar.i

# target to preprocess a source file
boolVar.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/boolVar.cpp.i
.PHONY : boolVar.cpp.i

boolVar.s: boolVar.cpp.s
.PHONY : boolVar.s

# target to generate assembly for a file
boolVar.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/boolVar.cpp.s
.PHONY : boolVar.cpp.s

codeBlocks.o: codeBlocks.cpp.o
.PHONY : codeBlocks.o

# target to build an object file
codeBlocks.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/codeBlocks.cpp.o
.PHONY : codeBlocks.cpp.o

codeBlocks.i: codeBlocks.cpp.i
.PHONY : codeBlocks.i

# target to preprocess a source file
codeBlocks.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/codeBlocks.cpp.i
.PHONY : codeBlocks.cpp.i

codeBlocks.s: codeBlocks.cpp.s
.PHONY : codeBlocks.s

# target to generate assembly for a file
codeBlocks.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/codeBlocks.cpp.s
.PHONY : codeBlocks.cpp.s

condParser.o: condParser.cpp.o
.PHONY : condParser.o

# target to build an object file
condParser.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/condParser.cpp.o
.PHONY : condParser.cpp.o

condParser.i: condParser.cpp.i
.PHONY : condParser.i

# target to preprocess a source file
condParser.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/condParser.cpp.i
.PHONY : condParser.cpp.i

condParser.s: condParser.cpp.s
.PHONY : condParser.s

# target to generate assembly for a file
condParser.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/condParser.cpp.s
.PHONY : condParser.cpp.s

cppStcode.o: cppStcode.cpp.o
.PHONY : cppStcode.o

# target to build an object file
cppStcode.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/cppStcode.cpp.o
.PHONY : cppStcode.cpp.o

cppStcode.i: cppStcode.cpp.i
.PHONY : cppStcode.i

# target to preprocess a source file
cppStcode.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/cppStcode.cpp.i
.PHONY : cppStcode.cpp.i

cppStcode.s: cppStcode.cpp.s
.PHONY : cppStcode.s

# target to generate assembly for a file
cppStcode.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/cppStcode.cpp.s
.PHONY : cppStcode.cpp.s

cppStcodeAssembly.o: cppStcodeAssembly.cpp.o
.PHONY : cppStcodeAssembly.o

# target to build an object file
cppStcodeAssembly.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/cppStcodeAssembly.cpp.o
.PHONY : cppStcodeAssembly.cpp.o

cppStcodeAssembly.i: cppStcodeAssembly.cpp.i
.PHONY : cppStcodeAssembly.i

# target to preprocess a source file
cppStcodeAssembly.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/cppStcodeAssembly.cpp.i
.PHONY : cppStcodeAssembly.cpp.i

cppStcodeAssembly.s: cppStcodeAssembly.cpp.s
.PHONY : cppStcodeAssembly.s

# target to generate assembly for a file
cppStcodeAssembly.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/cppStcodeAssembly.cpp.s
.PHONY : cppStcodeAssembly.cpp.s

debugSpitfile.o: debugSpitfile.cpp.o
.PHONY : debugSpitfile.o

# target to build an object file
debugSpitfile.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/debugSpitfile.cpp.o
.PHONY : debugSpitfile.cpp.o

debugSpitfile.i: debugSpitfile.cpp.i
.PHONY : debugSpitfile.i

# target to preprocess a source file
debugSpitfile.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/debugSpitfile.cpp.i
.PHONY : debugSpitfile.cpp.i

debugSpitfile.s: debugSpitfile.cpp.s
.PHONY : debugSpitfile.s

# target to generate assembly for a file
debugSpitfile.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/debugSpitfile.cpp.s
.PHONY : debugSpitfile.cpp.s

gatherVar.o: gatherVar.cpp.o
.PHONY : gatherVar.o

# target to build an object file
gatherVar.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/gatherVar.cpp.o
.PHONY : gatherVar.cpp.o

gatherVar.i: gatherVar.cpp.i
.PHONY : gatherVar.i

# target to preprocess a source file
gatherVar.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/gatherVar.cpp.i
.PHONY : gatherVar.cpp.i

gatherVar.s: gatherVar.cpp.s
.PHONY : gatherVar.s

# target to generate assembly for a file
gatherVar.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/gatherVar.cpp.s
.PHONY : gatherVar.cpp.s

gitRunner.o: gitRunner.cpp.o
.PHONY : gitRunner.o

# target to build an object file
gitRunner.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/gitRunner.cpp.o
.PHONY : gitRunner.cpp.o

gitRunner.i: gitRunner.cpp.i
.PHONY : gitRunner.i

# target to preprocess a source file
gitRunner.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/gitRunner.cpp.i
.PHONY : gitRunner.cpp.i

gitRunner.s: gitRunner.cpp.s
.PHONY : gitRunner.s

# target to generate assembly for a file
gitRunner.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/gitRunner.cpp.s
.PHONY : gitRunner.cpp.s

globVarSem.o: globVarSem.cpp.o
.PHONY : globVarSem.o

# target to build an object file
globVarSem.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/globVarSem.cpp.o
.PHONY : globVarSem.cpp.o

globVarSem.i: globVarSem.cpp.i
.PHONY : globVarSem.i

# target to preprocess a source file
globVarSem.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/globVarSem.cpp.i
.PHONY : globVarSem.cpp.i

globVarSem.s: globVarSem.cpp.s
.PHONY : globVarSem.s

# target to generate assembly for a file
globVarSem.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/globVarSem.cpp.s
.PHONY : globVarSem.cpp.s

globalConfig.o: globalConfig.cpp.o
.PHONY : globalConfig.o

# target to build an object file
globalConfig.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/globalConfig.cpp.o
.PHONY : globalConfig.cpp.o

globalConfig.i: globalConfig.cpp.i
.PHONY : globalConfig.i

# target to preprocess a source file
globalConfig.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/globalConfig.cpp.i
.PHONY : globalConfig.cpp.i

globalConfig.s: globalConfig.cpp.s
.PHONY : globalConfig.s

# target to generate assembly for a file
globalConfig.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/globalConfig.cpp.s
.PHONY : globalConfig.cpp.s

globvar.o: globvar.cpp.o
.PHONY : globvar.o

# target to build an object file
globvar.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/globvar.cpp.o
.PHONY : globvar.cpp.o

globvar.i: globvar.cpp.i
.PHONY : globvar.i

# target to preprocess a source file
globvar.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/globvar.cpp.i
.PHONY : globvar.cpp.i

globvar.s: globvar.cpp.s
.PHONY : globvar.s

# target to generate assembly for a file
globvar.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/globvar.cpp.s
.PHONY : globvar.cpp.s

intervals.o: intervals.cpp.o
.PHONY : intervals.o

# target to build an object file
intervals.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/intervals.cpp.o
.PHONY : intervals.cpp.o

intervals.i: intervals.cpp.i
.PHONY : intervals.i

# target to preprocess a source file
intervals.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/intervals.cpp.i
.PHONY : intervals.cpp.i

intervals.s: intervals.cpp.s
.PHONY : intervals.s

# target to generate assembly for a file
intervals.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/intervals.cpp.s
.PHONY : intervals.cpp.s

linkShaders.o: linkShaders.cpp.o
.PHONY : linkShaders.o

# target to build an object file
linkShaders.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/linkShaders.cpp.o
.PHONY : linkShaders.cpp.o

linkShaders.i: linkShaders.cpp.i
.PHONY : linkShaders.i

# target to preprocess a source file
linkShaders.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/linkShaders.cpp.i
.PHONY : linkShaders.cpp.i

linkShaders.s: linkShaders.cpp.s
.PHONY : linkShaders.s

# target to generate assembly for a file
linkShaders.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/linkShaders.cpp.s
.PHONY : linkShaders.cpp.s

loadShaders.o: loadShaders.cpp.o
.PHONY : loadShaders.o

# target to build an object file
loadShaders.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/loadShaders.cpp.o
.PHONY : loadShaders.cpp.o

loadShaders.i: loadShaders.cpp.i
.PHONY : loadShaders.i

# target to preprocess a source file
loadShaders.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/loadShaders.cpp.i
.PHONY : loadShaders.cpp.i

loadShaders.s: loadShaders.cpp.s
.PHONY : loadShaders.s

# target to generate assembly for a file
loadShaders.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/loadShaders.cpp.s
.PHONY : loadShaders.cpp.s

main.o: main.cpp.o
.PHONY : main.o

# target to build an object file
main.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/main.cpp.o
.PHONY : main.cpp.o

main.i: main.cpp.i
.PHONY : main.i

# target to preprocess a source file
main.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/main.cpp.i
.PHONY : main.cpp.i

main.s: main.cpp.s
.PHONY : main.s

# target to generate assembly for a file
main.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/main.cpp.s
.PHONY : main.cpp.s

makeShBinDump.o: makeShBinDump.cpp.o
.PHONY : makeShBinDump.o

# target to build an object file
makeShBinDump.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/makeShBinDump.cpp.o
.PHONY : makeShBinDump.cpp.o

makeShBinDump.i: makeShBinDump.cpp.i
.PHONY : makeShBinDump.i

# target to preprocess a source file
makeShBinDump.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/makeShBinDump.cpp.i
.PHONY : makeShBinDump.cpp.i

makeShBinDump.s: makeShBinDump.cpp.s
.PHONY : makeShBinDump.s

# target to generate assembly for a file
makeShBinDump.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/makeShBinDump.cpp.s
.PHONY : makeShBinDump.cpp.s

namedConst.o: namedConst.cpp.o
.PHONY : namedConst.o

# target to build an object file
namedConst.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/namedConst.cpp.o
.PHONY : namedConst.cpp.o

namedConst.i: namedConst.cpp.i
.PHONY : namedConst.i

# target to preprocess a source file
namedConst.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/namedConst.cpp.i
.PHONY : namedConst.cpp.i

namedConst.s: namedConst.cpp.s
.PHONY : namedConst.s

# target to generate assembly for a file
namedConst.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/namedConst.cpp.s
.PHONY : namedConst.cpp.s

parser/bparser.o: parser/bparser.cpp.o
.PHONY : parser/bparser.o

# target to build an object file
parser/bparser.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/parser/bparser.cpp.o
.PHONY : parser/bparser.cpp.o

parser/bparser.i: parser/bparser.cpp.i
.PHONY : parser/bparser.i

# target to preprocess a source file
parser/bparser.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/parser/bparser.cpp.i
.PHONY : parser/bparser.cpp.i

parser/bparser.s: parser/bparser.cpp.s
.PHONY : parser/bparser.s

# target to generate assembly for a file
parser/bparser.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/parser/bparser.cpp.s
.PHONY : parser/bparser.cpp.s

processes.o: processes.cpp.o
.PHONY : processes.o

# target to build an object file
processes.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/processes.cpp.o
.PHONY : processes.cpp.o

processes.i: processes.cpp.i
.PHONY : processes.i

# target to preprocess a source file
processes.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/processes.cpp.i
.PHONY : processes.cpp.i

processes.s: processes.cpp.s
.PHONY : processes.s

# target to generate assembly for a file
processes.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/processes.cpp.s
.PHONY : processes.cpp.s

processes_unix.o: processes_unix.cpp.o
.PHONY : processes_unix.o

# target to build an object file
processes_unix.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/processes_unix.cpp.o
.PHONY : processes_unix.cpp.o

processes_unix.i: processes_unix.cpp.i
.PHONY : processes_unix.i

# target to preprocess a source file
processes_unix.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/processes_unix.cpp.i
.PHONY : processes_unix.cpp.i

processes_unix.s: processes_unix.cpp.s
.PHONY : processes_unix.s

# target to generate assembly for a file
processes_unix.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/processes_unix.cpp.s
.PHONY : processes_unix.cpp.s

samplers.o: samplers.cpp.o
.PHONY : samplers.o

# target to build an object file
samplers.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/samplers.cpp.o
.PHONY : samplers.cpp.o

samplers.i: samplers.cpp.i
.PHONY : samplers.i

# target to preprocess a source file
samplers.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/samplers.cpp.i
.PHONY : samplers.cpp.i

samplers.s: samplers.cpp.s
.PHONY : samplers.s

# target to generate assembly for a file
samplers.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/samplers.cpp.s
.PHONY : samplers.cpp.s

semChecker.o: semChecker.cpp.o
.PHONY : semChecker.o

# target to build an object file
semChecker.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/semChecker.cpp.o
.PHONY : semChecker.cpp.o

semChecker.i: semChecker.cpp.i
.PHONY : semChecker.i

# target to preprocess a source file
semChecker.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/semChecker.cpp.i
.PHONY : semChecker.cpp.i

semChecker.s: semChecker.cpp.s
.PHONY : semChecker.s

# target to generate assembly for a file
semChecker.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/semChecker.cpp.s
.PHONY : semChecker.cpp.s

semUtils.o: semUtils.cpp.o
.PHONY : semUtils.o

# target to build an object file
semUtils.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/semUtils.cpp.o
.PHONY : semUtils.cpp.o

semUtils.i: semUtils.cpp.i
.PHONY : semUtils.i

# target to preprocess a source file
semUtils.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/semUtils.cpp.i
.PHONY : semUtils.cpp.i

semUtils.s: semUtils.cpp.s
.PHONY : semUtils.s

# target to generate assembly for a file
semUtils.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/semUtils.cpp.s
.PHONY : semUtils.cpp.s

shCode.o: shCode.cpp.o
.PHONY : shCode.o

# target to build an object file
shCode.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shCode.cpp.o
.PHONY : shCode.cpp.o

shCode.i: shCode.cpp.i
.PHONY : shCode.i

# target to preprocess a source file
shCode.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shCode.cpp.i
.PHONY : shCode.cpp.i

shCode.s: shCode.cpp.s
.PHONY : shCode.s

# target to generate assembly for a file
shCode.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shCode.cpp.s
.PHONY : shCode.cpp.s

shCompiler.o: shCompiler.cpp.o
.PHONY : shCompiler.o

# target to build an object file
shCompiler.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shCompiler.cpp.o
.PHONY : shCompiler.cpp.o

shCompiler.i: shCompiler.cpp.i
.PHONY : shCompiler.i

# target to preprocess a source file
shCompiler.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shCompiler.cpp.i
.PHONY : shCompiler.cpp.i

shCompiler.s: shCompiler.cpp.s
.PHONY : shCompiler.s

# target to generate assembly for a file
shCompiler.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shCompiler.cpp.s
.PHONY : shCompiler.cpp.s

shExpr.o: shExpr.cpp.o
.PHONY : shExpr.o

# target to build an object file
shExpr.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shExpr.cpp.o
.PHONY : shExpr.cpp.o

shExpr.i: shExpr.cpp.i
.PHONY : shExpr.i

# target to preprocess a source file
shExpr.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shExpr.cpp.i
.PHONY : shExpr.cpp.i

shExpr.s: shExpr.cpp.s
.PHONY : shExpr.s

# target to generate assembly for a file
shExpr.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shExpr.cpp.s
.PHONY : shExpr.cpp.s

shExprParser.o: shExprParser.cpp.o
.PHONY : shExprParser.o

# target to build an object file
shExprParser.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shExprParser.cpp.o
.PHONY : shExprParser.cpp.o

shExprParser.i: shExprParser.cpp.i
.PHONY : shExprParser.i

# target to preprocess a source file
shExprParser.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shExprParser.cpp.i
.PHONY : shExprParser.cpp.i

shExprParser.s: shExprParser.cpp.s
.PHONY : shExprParser.s

# target to generate assembly for a file
shExprParser.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shExprParser.cpp.s
.PHONY : shExprParser.cpp.s

shFunc.o: shFunc.cpp.o
.PHONY : shFunc.o

# target to build an object file
shFunc.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shFunc.cpp.o
.PHONY : shFunc.cpp.o

shFunc.i: shFunc.cpp.i
.PHONY : shFunc.i

# target to preprocess a source file
shFunc.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shFunc.cpp.i
.PHONY : shFunc.cpp.i

shFunc.s: shFunc.cpp.s
.PHONY : shFunc.s

# target to generate assembly for a file
shFunc.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shFunc.cpp.s
.PHONY : shFunc.cpp.s

shLocVar.o: shLocVar.cpp.o
.PHONY : shLocVar.o

# target to build an object file
shLocVar.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shLocVar.cpp.o
.PHONY : shLocVar.cpp.o

shLocVar.i: shLocVar.cpp.i
.PHONY : shLocVar.i

# target to preprocess a source file
shLocVar.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shLocVar.cpp.i
.PHONY : shLocVar.cpp.i

shLocVar.s: shLocVar.cpp.s
.PHONY : shLocVar.s

# target to generate assembly for a file
shLocVar.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shLocVar.cpp.s
.PHONY : shLocVar.cpp.s

shLog.o: shLog.cpp.o
.PHONY : shLog.o

# target to build an object file
shLog.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shLog.cpp.o
.PHONY : shLog.cpp.o

shLog.i: shLog.cpp.i
.PHONY : shLog.i

# target to preprocess a source file
shLog.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shLog.cpp.i
.PHONY : shLog.cpp.i

shLog.s: shLog.cpp.s
.PHONY : shLog.s

# target to generate assembly for a file
shLog.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shLog.cpp.s
.PHONY : shLog.cpp.s

shMacro.o: shMacro.cpp.o
.PHONY : shMacro.o

# target to build an object file
shMacro.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shMacro.cpp.o
.PHONY : shMacro.cpp.o

shMacro.i: shMacro.cpp.i
.PHONY : shMacro.i

# target to preprocess a source file
shMacro.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shMacro.cpp.i
.PHONY : shMacro.cpp.i

shMacro.s: shMacro.cpp.s
.PHONY : shMacro.s

# target to generate assembly for a file
shMacro.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shMacro.cpp.s
.PHONY : shMacro.cpp.s

shSemCode.o: shSemCode.cpp.o
.PHONY : shSemCode.o

# target to build an object file
shSemCode.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shSemCode.cpp.o
.PHONY : shSemCode.cpp.o

shSemCode.i: shSemCode.cpp.i
.PHONY : shSemCode.i

# target to preprocess a source file
shSemCode.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shSemCode.cpp.i
.PHONY : shSemCode.cpp.i

shSemCode.s: shSemCode.cpp.s
.PHONY : shSemCode.s

# target to generate assembly for a file
shSemCode.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shSemCode.cpp.s
.PHONY : shSemCode.cpp.s

shUtils.o: shUtils.cpp.o
.PHONY : shUtils.o

# target to build an object file
shUtils.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shUtils.cpp.o
.PHONY : shUtils.cpp.o

shUtils.i: shUtils.cpp.i
.PHONY : shUtils.i

# target to preprocess a source file
shUtils.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shUtils.cpp.i
.PHONY : shUtils.cpp.i

shUtils.s: shUtils.cpp.s
.PHONY : shUtils.s

# target to generate assembly for a file
shUtils.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shUtils.cpp.s
.PHONY : shUtils.cpp.s

shVerMgr.o: shVerMgr.cpp.o
.PHONY : shVerMgr.o

# target to build an object file
shVerMgr.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shVerMgr.cpp.o
.PHONY : shVerMgr.cpp.o

shVerMgr.i: shVerMgr.cpp.i
.PHONY : shVerMgr.i

# target to preprocess a source file
shVerMgr.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shVerMgr.cpp.i
.PHONY : shVerMgr.cpp.i

shVerMgr.s: shVerMgr.cpp.s
.PHONY : shVerMgr.s

# target to generate assembly for a file
shVerMgr.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shVerMgr.cpp.s
.PHONY : shVerMgr.cpp.s

sh_stat.o: sh_stat.cpp.o
.PHONY : sh_stat.o

# target to build an object file
sh_stat.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/sh_stat.cpp.o
.PHONY : sh_stat.cpp.o

sh_stat.i: sh_stat.cpp.i
.PHONY : sh_stat.i

# target to preprocess a source file
sh_stat.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/sh_stat.cpp.i
.PHONY : sh_stat.cpp.i

sh_stat.s: sh_stat.cpp.s
.PHONY : sh_stat.s

# target to generate assembly for a file
sh_stat.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/sh_stat.cpp.s
.PHONY : sh_stat.cpp.s

shaderVariant.o: shaderVariant.cpp.o
.PHONY : shaderVariant.o

# target to build an object file
shaderVariant.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shaderVariant.cpp.o
.PHONY : shaderVariant.cpp.o

shaderVariant.i: shaderVariant.cpp.i
.PHONY : shaderVariant.i

# target to preprocess a source file
shaderVariant.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shaderVariant.cpp.i
.PHONY : shaderVariant.cpp.i

shaderVariant.s: shaderVariant.cpp.s
.PHONY : shaderVariant.s

# target to generate assembly for a file
shaderVariant.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shaderVariant.cpp.s
.PHONY : shaderVariant.cpp.s

shaderVariantSrc.o: shaderVariantSrc.cpp.o
.PHONY : shaderVariantSrc.o

# target to build an object file
shaderVariantSrc.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shaderVariantSrc.cpp.o
.PHONY : shaderVariantSrc.cpp.o

shaderVariantSrc.i: shaderVariantSrc.cpp.i
.PHONY : shaderVariantSrc.i

# target to preprocess a source file
shaderVariantSrc.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shaderVariantSrc.cpp.i
.PHONY : shaderVariantSrc.cpp.i

shaderVariantSrc.s: shaderVariantSrc.cpp.s
.PHONY : shaderVariantSrc.s

# target to generate assembly for a file
shaderVariantSrc.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shaderVariantSrc.cpp.s
.PHONY : shaderVariantSrc.cpp.s

shadervarGenerator.o: shadervarGenerator.cpp.o
.PHONY : shadervarGenerator.o

# target to build an object file
shadervarGenerator.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shadervarGenerator.cpp.o
.PHONY : shadervarGenerator.cpp.o

shadervarGenerator.i: shadervarGenerator.cpp.i
.PHONY : shadervarGenerator.i

# target to preprocess a source file
shadervarGenerator.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shadervarGenerator.cpp.i
.PHONY : shadervarGenerator.cpp.i

shadervarGenerator.s: shadervarGenerator.cpp.s
.PHONY : shadervarGenerator.s

# target to generate assembly for a file
shadervarGenerator.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shadervarGenerator.cpp.s
.PHONY : shadervarGenerator.cpp.s

shlex.o: shlex.cpp.o
.PHONY : shlex.o

# target to build an object file
shlex.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shlex.cpp.o
.PHONY : shlex.cpp.o

shlex.i: shlex.cpp.i
.PHONY : shlex.i

# target to preprocess a source file
shlex.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shlex.cpp.i
.PHONY : shlex.cpp.i

shlex.s: shlex.cpp.s
.PHONY : shlex.s

# target to generate assembly for a file
shlex.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shlex.cpp.s
.PHONY : shlex.cpp.s

shlexterm.o: shlexterm.cpp.o
.PHONY : shlexterm.o

# target to build an object file
shlexterm.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shlexterm.cpp.o
.PHONY : shlexterm.cpp.o

shlexterm.i: shlexterm.cpp.i
.PHONY : shlexterm.i

# target to preprocess a source file
shlexterm.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shlexterm.cpp.i
.PHONY : shlexterm.cpp.i

shlexterm.s: shlexterm.cpp.s
.PHONY : shlexterm.s

# target to generate assembly for a file
shlexterm.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shlexterm.cpp.s
.PHONY : shlexterm.cpp.s

shsem.o: shsem.cpp.o
.PHONY : shsem.o

# target to build an object file
shsem.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shsem.cpp.o
.PHONY : shsem.cpp.o

shsem.i: shsem.cpp.i
.PHONY : shsem.i

# target to preprocess a source file
shsem.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shsem.cpp.i
.PHONY : shsem.cpp.i

shsem.s: shsem.cpp.s
.PHONY : shsem.s

# target to generate assembly for a file
shsem.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shsem.cpp.s
.PHONY : shsem.cpp.s

shsyn.o: shsyn.cpp.o
.PHONY : shsyn.o

# target to build an object file
shsyn.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shsyn.cpp.o
.PHONY : shsyn.cpp.o

shsyn.i: shsyn.cpp.i
.PHONY : shsyn.i

# target to preprocess a source file
shsyn.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shsyn.cpp.i
.PHONY : shsyn.cpp.i

shsyn.s: shsyn.cpp.s
.PHONY : shsyn.s

# target to generate assembly for a file
shsyn.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/shsyn.cpp.s
.PHONY : shsyn.cpp.s

transcodeShader.o: transcodeShader.cpp.o
.PHONY : transcodeShader.o

# target to build an object file
transcodeShader.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/transcodeShader.cpp.o
.PHONY : transcodeShader.cpp.o

transcodeShader.i: transcodeShader.cpp.i
.PHONY : transcodeShader.i

# target to preprocess a source file
transcodeShader.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/transcodeShader.cpp.i
.PHONY : transcodeShader.cpp.i

transcodeShader.s: transcodeShader.cpp.s
.PHONY : transcodeShader.s

# target to generate assembly for a file
transcodeShader.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/transcodeShader.cpp.s
.PHONY : transcodeShader.cpp.s

varMap.o: varMap.cpp.o
.PHONY : varMap.o

# target to build an object file
varMap.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/varMap.cpp.o
.PHONY : varMap.cpp.o

varMap.i: varMap.cpp.i
.PHONY : varMap.i

# target to preprocess a source file
varMap.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/varMap.cpp.i
.PHONY : varMap.cpp.i

varMap.s: varMap.cpp.s
.PHONY : varMap.s

# target to generate assembly for a file
varMap.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/varMap.cpp.s
.PHONY : varMap.cpp.s

variablesMerger.o: variablesMerger.cpp.o
.PHONY : variablesMerger.o

# target to build an object file
variablesMerger.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/variablesMerger.cpp.o
.PHONY : variablesMerger.cpp.o

variablesMerger.i: variablesMerger.cpp.i
.PHONY : variablesMerger.i

# target to preprocess a source file
variablesMerger.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/variablesMerger.cpp.i
.PHONY : variablesMerger.cpp.i

variablesMerger.s: variablesMerger.cpp.s
.PHONY : variablesMerger.s

# target to generate assembly for a file
variablesMerger.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/variablesMerger.cpp.s
.PHONY : variablesMerger.cpp.s

ver_obj_dxc.o: ver_obj_dxc.cpp.o
.PHONY : ver_obj_dxc.o

# target to build an object file
ver_obj_dxc.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/ver_obj_dxc.cpp.o
.PHONY : ver_obj_dxc.cpp.o

ver_obj_dxc.i: ver_obj_dxc.cpp.i
.PHONY : ver_obj_dxc.i

# target to preprocess a source file
ver_obj_dxc.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/ver_obj_dxc.cpp.i
.PHONY : ver_obj_dxc.cpp.i

ver_obj_dxc.s: ver_obj_dxc.cpp.s
.PHONY : ver_obj_dxc.s

# target to generate assembly for a file
ver_obj_dxc.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/ver_obj_dxc.cpp.s
.PHONY : ver_obj_dxc.cpp.s

ver_obj_spirv.o: ver_obj_spirv.cpp.o
.PHONY : ver_obj_spirv.o

# target to build an object file
ver_obj_spirv.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/ver_obj_spirv.cpp.o
.PHONY : ver_obj_spirv.cpp.o

ver_obj_spirv.i: ver_obj_spirv.cpp.i
.PHONY : ver_obj_spirv.i

# target to preprocess a source file
ver_obj_spirv.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/ver_obj_spirv.cpp.i
.PHONY : ver_obj_spirv.cpp.i

ver_obj_spirv.s: ver_obj_spirv.cpp.s
.PHONY : ver_obj_spirv.s

# target to generate assembly for a file
ver_obj_spirv.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/ver_obj_spirv.cpp.s
.PHONY : ver_obj_spirv.cpp.s

winmain_con.o: winmain_con.cpp.o
.PHONY : winmain_con.o

# target to build an object file
winmain_con.cpp.o:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/winmain_con.cpp.o
.PHONY : winmain_con.cpp.o

winmain_con.i: winmain_con.cpp.i
.PHONY : winmain_con.i

# target to preprocess a source file
winmain_con.cpp.i:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/winmain_con.cpp.i
.PHONY : winmain_con.cpp.i

winmain_con.s: winmain_con.cpp.s
.PHONY : winmain_con.s

# target to generate assembly for a file
winmain_con.cpp.s:
	cd /home/ubuntu/repos/DagorEngine/build && $(MAKE) $(MAKESILENT) -f prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/build.make prog/tools/ShaderCompiler2/CMakeFiles/ShaderCompiler2.dir/winmain_con.cpp.s
.PHONY : winmain_con.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... parser_gen"
	@echo "... ShaderCompiler2"
	@echo "... assemblyShader.o"
	@echo "... assemblyShader.i"
	@echo "... assemblyShader.s"
	@echo "... binDumpUtils.o"
	@echo "... binDumpUtils.i"
	@echo "... binDumpUtils.s"
	@echo "... boolVar.o"
	@echo "... boolVar.i"
	@echo "... boolVar.s"
	@echo "... codeBlocks.o"
	@echo "... codeBlocks.i"
	@echo "... codeBlocks.s"
	@echo "... condParser.o"
	@echo "... condParser.i"
	@echo "... condParser.s"
	@echo "... cppStcode.o"
	@echo "... cppStcode.i"
	@echo "... cppStcode.s"
	@echo "... cppStcodeAssembly.o"
	@echo "... cppStcodeAssembly.i"
	@echo "... cppStcodeAssembly.s"
	@echo "... debugSpitfile.o"
	@echo "... debugSpitfile.i"
	@echo "... debugSpitfile.s"
	@echo "... gatherVar.o"
	@echo "... gatherVar.i"
	@echo "... gatherVar.s"
	@echo "... gitRunner.o"
	@echo "... gitRunner.i"
	@echo "... gitRunner.s"
	@echo "... globVarSem.o"
	@echo "... globVarSem.i"
	@echo "... globVarSem.s"
	@echo "... globalConfig.o"
	@echo "... globalConfig.i"
	@echo "... globalConfig.s"
	@echo "... globvar.o"
	@echo "... globvar.i"
	@echo "... globvar.s"
	@echo "... intervals.o"
	@echo "... intervals.i"
	@echo "... intervals.s"
	@echo "... linkShaders.o"
	@echo "... linkShaders.i"
	@echo "... linkShaders.s"
	@echo "... loadShaders.o"
	@echo "... loadShaders.i"
	@echo "... loadShaders.s"
	@echo "... main.o"
	@echo "... main.i"
	@echo "... main.s"
	@echo "... makeShBinDump.o"
	@echo "... makeShBinDump.i"
	@echo "... makeShBinDump.s"
	@echo "... namedConst.o"
	@echo "... namedConst.i"
	@echo "... namedConst.s"
	@echo "... parser/bparser.o"
	@echo "... parser/bparser.i"
	@echo "... parser/bparser.s"
	@echo "... processes.o"
	@echo "... processes.i"
	@echo "... processes.s"
	@echo "... processes_unix.o"
	@echo "... processes_unix.i"
	@echo "... processes_unix.s"
	@echo "... samplers.o"
	@echo "... samplers.i"
	@echo "... samplers.s"
	@echo "... semChecker.o"
	@echo "... semChecker.i"
	@echo "... semChecker.s"
	@echo "... semUtils.o"
	@echo "... semUtils.i"
	@echo "... semUtils.s"
	@echo "... shCode.o"
	@echo "... shCode.i"
	@echo "... shCode.s"
	@echo "... shCompiler.o"
	@echo "... shCompiler.i"
	@echo "... shCompiler.s"
	@echo "... shExpr.o"
	@echo "... shExpr.i"
	@echo "... shExpr.s"
	@echo "... shExprParser.o"
	@echo "... shExprParser.i"
	@echo "... shExprParser.s"
	@echo "... shFunc.o"
	@echo "... shFunc.i"
	@echo "... shFunc.s"
	@echo "... shLocVar.o"
	@echo "... shLocVar.i"
	@echo "... shLocVar.s"
	@echo "... shLog.o"
	@echo "... shLog.i"
	@echo "... shLog.s"
	@echo "... shMacro.o"
	@echo "... shMacro.i"
	@echo "... shMacro.s"
	@echo "... shSemCode.o"
	@echo "... shSemCode.i"
	@echo "... shSemCode.s"
	@echo "... shUtils.o"
	@echo "... shUtils.i"
	@echo "... shUtils.s"
	@echo "... shVerMgr.o"
	@echo "... shVerMgr.i"
	@echo "... shVerMgr.s"
	@echo "... sh_stat.o"
	@echo "... sh_stat.i"
	@echo "... sh_stat.s"
	@echo "... shaderVariant.o"
	@echo "... shaderVariant.i"
	@echo "... shaderVariant.s"
	@echo "... shaderVariantSrc.o"
	@echo "... shaderVariantSrc.i"
	@echo "... shaderVariantSrc.s"
	@echo "... shadervarGenerator.o"
	@echo "... shadervarGenerator.i"
	@echo "... shadervarGenerator.s"
	@echo "... shlex.o"
	@echo "... shlex.i"
	@echo "... shlex.s"
	@echo "... shlexterm.o"
	@echo "... shlexterm.i"
	@echo "... shlexterm.s"
	@echo "... shsem.o"
	@echo "... shsem.i"
	@echo "... shsem.s"
	@echo "... shsyn.o"
	@echo "... shsyn.i"
	@echo "... shsyn.s"
	@echo "... transcodeShader.o"
	@echo "... transcodeShader.i"
	@echo "... transcodeShader.s"
	@echo "... varMap.o"
	@echo "... varMap.i"
	@echo "... varMap.s"
	@echo "... variablesMerger.o"
	@echo "... variablesMerger.i"
	@echo "... variablesMerger.s"
	@echo "... ver_obj_dxc.o"
	@echo "... ver_obj_dxc.i"
	@echo "... ver_obj_dxc.s"
	@echo "... ver_obj_spirv.o"
	@echo "... ver_obj_spirv.i"
	@echo "... ver_obj_spirv.s"
	@echo "... winmain_con.o"
	@echo "... winmain_con.i"
	@echo "... winmain_con.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/ubuntu/repos/DagorEngine/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

